def get_user_input():
    """Get user input for table size and layout"""
    while True:
        try:
            n = int(input("Enter the size of multiplication table (1-20): "))
            if 1 <= n <= 20:
                break
            print("Please enter a number between 1 and 20.")
        except ValueError:
            print("Please enter a valid integer.")

    while True:
        layout = input("Choose layout (vertical/horizontal): ").lower()
        if layout in ['vertical', 'horizontal', 'v', 'h']:
            break
        print("Please enter 'vertical' or 'horizontal'.")

    return n, layout

def generate_horizontal_table(n):
    """Generate horizontal multiplication table"""
    return [[i * j for j in range(1, n+1)] for i in range(1, n+1)]

def generate_vertical_table(n):
    """Generate vertical multiplication table"""
    return [[i * j for i in range(1, n+1)] for j in range(1, n+1)]

def print_table(table, layout):
    """Print the multiplication table neatly"""
    print(f"\n{' Vertical ' if layout.startswith('v') else ' Horizontal '} Multiplication Table")
    print("=" * 30)
    
    for row in table:
        # Format each number to be right-aligned with width of longest number
        formatted_row = [f"{num:>{len(str(len(table)**2))}}" for num in row]
        print(" | ".join(formatted_row))
        if layout.startswith('h'):
            print("-" * (len(" | ".join(formatted_row))))

def main():
    print("Customizable Multiplication Table App")
    print("-------------------------------------")
    
    n, layout = get_user_input()
    
    if layout.startswith('v'):
        table = generate_vertical_table(n)
    else:
        table = generate_horizontal_table(n)
    
    print_table(table, layout)
    
    # Option to show the list of lists structure
    show_structure = input("\nWould you like to see the list structure? (y/n): ").lower()
    if show_structure == 'y':
        print("\nList of lists structure:")
        print(table)

if __name__ == "__main__":
    main()
